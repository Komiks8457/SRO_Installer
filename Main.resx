<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAwQWAAMGFQAFBx0ABQcgAAYHFgAHCREABwocAAgLGgAKDBYACgwbAAoMJAAKDR0ADA0xAAwO
        HgANDhsADRAiAA4PPgAOEBsADxARAA8RHgAPESYADxErABEREgAREYoAERMUABETIAAREycAERNYABIU
        FQASFSMAEhUzABMTnAATE6oAExQcABUVugAVFcQAFRXPABUWygAVFxcAFRctABYXbwAWGBkAFhghABYY
        KgAWGDsAFxkdABcZJAAXGTMAGBnJABgaGwAYGikAGRsbABkbLAAaGxsAGhscABocHQAaHCEAGh05ABsd
        HgAbHSoAGx0vABsdNAAbHh8AHB3HABwfKwAcIHcAHSHMAB4e2AAeITYAHiE/AB4iLgAfIUcAHyKbAB8i
        qQAgIkoAICg9ACEjJQAhI08AISU7ACMmMwAkJS0AJCdDACUnVQAlKDwAJSkrACYragAmLLwAJyo0ACgp
        2wAoQ60AKSwzACksPwAqLMgAKi4vACsvRQArL4UALTE0AC0xtAAtNEcALzPUADA1NwAwNkQAMTWjADI2
        OQAzODoAMznLADM8RQA0N9sANFCgADU5OwA2OjwANjtLADc7PwA3QbgAOT0/ADk9QAA5PkAAOT9CADl4
        5wA6P0AAOkFEADs/QgA7QEIAO0N0ADxBQwA8QlQAPkNFAD5ESwBAREcAQUhXAEJISwBETckARFJ5AEdR
        VwBITlAASVCWAEtL3QBLTXAATVdlAE2O7gBPVVgAUE+3AFBixQBRWFoAUVldAFJcXwBSZY4AU2baAFRc
        agBUdeIAVV1fAFVdYQBWW10AVlx0AFdeYQBaYuQAXGRpAF1kdABdou4AY2xuAGZsdwBmbYYAZm9zAGho
        twBobJ8AaHB7AGim8gBpdOcAaYvZAGpzdgBqd34Aa3N+AGt1hABrdngAbHWLAG14fABwen0AcH2CAHF7
        jAB0hI4AdX2UAHV+ggB1gYYAdnx9AHmDhwB7hosAe4eZAH6KjwB+rvQAf5KZAIHA8gCCguUAhIuOAIWM
        lQCFkKMAhpCuAIaTmACGmdYAipC5AIqSmgCKmJwAip+mAIyYqwCNmaQAjZyfAI+TlQCPnaEAkJ6jAJCi
        rACRoKQAkqGmAJSS8wCUmpwAlaSpAJfD9QCaq7EAm6XAAJumrACcoqQAnabMAJ2xtwChtbsAo6vBAKOy
        tgCkqqsApKyyAKSwyQCluL4Ap7vBAKiwyACqt7sAqr3CAKuxswCuucIAs8HFALS8vwC2xckAubT4ALnC
        2QC5xsoAvMHDALzC4QDAx9sAw87SAMbLzADJzu0AztXYANLY3gDW3eAA1+LlAN7k5QDj5+kA6OzvAPT2
        9gD///8AAAA/Ozs4Ozg4Njg0ODQ0MjQ0NDQyNDQ0ODg0NzQ4AAAAUc/Nzc/NzZ23o6re4uHh4ezp1c62
        ubG60trQ0PlNADvP+YeZznN4bnWDsujk3djt+/j725mNkIPawnaY+us0MrJbc6rp22+wst68Zg8IDAgK
        ChTi/PW3yeK5klXs+SoqunFzblj1592rRwYKFB4PCgwOEhA9ofv39X+He27gKiq8c3RohtatLwk1EDU5
        LzxGLltma0caOsL++396YdMqMrp0cXzdtBEbCwsLRj4rQUxcZmFxi4ZMH6H48WlpySo0vG922dFHIBgL
        Cx9WS0hFVFFmZUYrfJNjG1/x6WnFKjjJXr7TcIVtICkwS1ZWTk5TGhQSHHKPj6mPHp3gg9AnNNDV8Isq
        KpNyIRxGU2BOGxIPH2KEhImJlKmPQtbWzSc3z/znKyI5UI9KJRFGSzAUFkpdamScvdfX179XiPTgJzTp
        +pgCLisuhZQjIC0wEBwjV0BZiaiohYBmxtcm9+0nNPf0UQkrPSs+lEomEQ0YGCNEWYlnUVtmcGZQEGf0
        9Bk066MaEjM9KDWFliUgICEkRFlWCT1BUFxUXEUVL8H5GTTlVRRHTx4sLz2EMSEjJSQgCQ8oEj5SU1I8
        RRAiYfwXNOVeHlDIRUUpKUMkIyQpKSkQFhsQSFZWRjPCFhKQ/Bcq5X1MzItPSTFAQ5Z3d21CQlpCFQ8P
        TlNIGp67PYPtFyqdgNHqk11DQ5a/v5+Md59qSVpaHBsoSEsoiruzUZATNFvR79xkQ2BmY1CJRCAtqKeo
        SVZaERswTh8W9rWraBM2tLz532eIlYaCfpxZQBIQGp+WYEImER8tDgz277KyEzu+6/jZnq+tnZV+fGxK
        MC0VTpxkKSUYFi0IAfb9tL4TNrf5+eOVoaiknouCamdPOjAWSkRKJiAwFQEB/v3Y1hM/up2485WmtcCo
        nNScZ1xURRwlWTEmHBYIAQH+wZHWEz+jgZf3w6ysta3U7tTApI6OiURZJhgKCAEB2dVxXtYTO657kNrw
        oaasta+evb29p6eMXRgRBQgIAQH7znZNuhM/z2iNoP74r6a1ta+inpqalWMLCwsICgEB2vGdb16qEz/N
        dbrB/P74rZ61rbWiotnypQ0EAwUCT+L963V/XrwXO8Vxtra49/77r36eu8v27+byxwcEB1/dyp11oIFV
        1hc71q5etrmH2/363uPv75pS+l/E3J7d6N2SabGwTaDqGT/59JGBe2iHedv+rpuXkvr6nZKSsuWyZXhV
        aHi2+fcdAFH5xc3Pz9PQ0q6Yl8H6+vrb252Sm9jN09PT0+3rgQAAAD87Ozs/Pz8/Ozg4NDQ0NzI0NDQ0
        NDc3NDI0NDIAAMAAAAOAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAHAAAAD
</value>
  </data>
</root>